<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="21" time="0.621" timestamp="2022-04-26T11:38:03.680199" hostname="DESKTOP-28HFN5O"><testcase classname="tests.test_accum" name="test_accumulator_init" time="0.001" /><testcase classname="tests.test_accum" name="test_accumulator_add_one" time="0.001" /><testcase classname="tests.test_accum" name="test_accumulator_add_three" time="0.001" /><testcase classname="tests.test_accum" name="test_accumulator_add_twice" time="0.001" /><testcase classname="tests.test_accum" name="test_accumulator_cannot_set_count_directly" time="0.001" /><testcase classname="tests.test_accum_fixture" name="test_accumulator_init" time="0.001" /><testcase classname="tests.test_accum_fixture" name="test_accumulator_add_one" time="0.001" /><testcase classname="tests.test_accum_fixture" name="test_accumulator_add_three" time="0.001" /><testcase classname="tests.test_accum_fixture" name="test_accumulator_add_twice" time="0.001" /><testcase classname="tests.test_accum_fixture" name="test_accumulator_cannot_set_count_directly" time="0.001" /><testcase classname="tests.test_math" name="test_one_plus_one" time="0.001"><failure message="assert (1 + 1) == 3">def test_one_plus_one():
&gt;      assert 1 + 1 == 3
E      assert (1 + 1) == 3

tests\test_math.py:6: AssertionError</failure></testcase><testcase classname="tests.test_math" name="test_one_plus_two" time="0.001" /><testcase classname="tests.test_math" name="test_one_plus_third" time="0.001" /><testcase classname="tests.test_math" name="test_multiplication[2-3-6]" time="0.001" /><testcase classname="tests.test_math" name="test_multiplication[1-99-99]" time="0.001" /><testcase classname="tests.test_math" name="test_multiplication[0-99-0]" time="0.001" /><testcase classname="tests.test_math" name="test_multiplication[3--4-12]" time="0.001"><failure message="assert (3 * -4) == 12">a = 3, b = -4, product = 12

    @pytest.mark.parametrize('a, b, product',products)
    def test_multiplication(a,b,product):
&gt;       assert a * b == product
E       assert (3 * -4) == 12

tests\test_math.py:46: AssertionError</failure></testcase><testcase classname="tests.test_math" name="test_multiplication[-5--5-25]" time="0.001" /><testcase classname="tests.test_math" name="test_multiplication[2.5-6.7-16.75]" time="0.001" /><testcase classname="tests.test_math" name="test_param_entries[1-1-2]" time="0.001" /><testcase classname="tests.test_math" name="test_param_entries[4-5-9]" time="0.001" /></testsuite></testsuites>